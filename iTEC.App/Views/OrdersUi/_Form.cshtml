
@using API.Base.Web.Base.Extensions.HtmlHelpers
@inject API.Base.Web.Base.Database.DataLayer.IDataLayer DataLayer
@model iTEC.App.Order.OrderEntity

<div>
        <div class="form-group">
            @Html.LabelFor(model => model.Buyer)

<select asp-for="Buyer.Id" 
asp-items="(await DataLayer.Repo<iTEC.App.Profile.BuyerProfile.BuyerProfileEntity>().GetAll()).Select(p => new SelectListItem(p.ToString(), p.Id))" 
class="form-control">
                <option selected="selected" value="">Please select</option>
 </select>
            @Html.DescriptionFor(model => model.Buyer)
            @Html.ValidationMessageFor(model => model.Buyer, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TotalPrice)

@Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control" }})
            @Html.DescriptionFor(model => model.TotalPrice)
            @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Paid)

@Html.EditorFor(model => model.Paid, new { htmlAttributes = new { @class = "form-control" }})
            @Html.DescriptionFor(model => model.Paid)
            @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentInformation)

@Html.EditorFor(model => model.PaymentInformation, new { htmlAttributes = new { @class = "form-control" }})
            @Html.DescriptionFor(model => model.PaymentInformation)
            @Html.ValidationMessageFor(model => model.PaymentInformation, "", new { @class = "text-danger" })
        </div>
</div>